version: 2.1
orbs:
  aws-cli: circleci/aws-cli@2.0.3
  # python: circleci/python@1.5.0
commands:
  destroy_infra:
    steps:
      - run:
          name: Destroy Aws infra
          when: on_fail
          command: |
            aws cloudformation delete-stack \
              --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5}
jobs:
  create_infrastructure: 
      docker:
        - image: amazon/aws-cli
      steps:
        - checkout    
        - run:
            name: Create Cloudformation Stack
            command: |
              aws cloudformation deploy \
                --template-file template.yml \
                --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
                --region us-east-1
  update_inventory:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Install tar utility
          command: |
            yum install -y tar gzip        
      - run:
          name: create inventory file
          command: |
            echo "[all]" > ~/project/inventory
      - run:
          name: Fetch and save the old pipeline ID (bucket name) responsible for the last release.
          command: |
            aws cloudformation \
            list-exports --query "Exports[?Name==\`PublicIp\`].Value" \
            --no-paginate --output text > ~/project/inventory
      - persist_to_workspace:
          root: ~/project
          paths: 
            - inventory 
      - run:
          name: check per2
          command: |
            cat inventory 
  configure_infrastructure: 
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - run:
          name: check per2
          command: |
            ls  
      - run:
          name: check per2
          command: |
            cat inventory 
      - add_ssh_keys:
          fingerprints: ["a3:00:a7:22:fc:4a:5b:50:bb:ec:37:72:60:67:bc:96"] 
      - run:
          name: Install Ansible
          command: |
            apk add --update ansible
      - run:
          name: Run Playbook and Configure server
          command: |
            ansible-playbook -i ~/project/inventory awsdeploy.yml
      - destroy_infra
workflows:
  on_commit:
    jobs:
      - create_infrastructure
      - update_inventory:
          requires:
            - create_infrastructure
      - configure_infrastructure:
          requires:
            - update_inventory

