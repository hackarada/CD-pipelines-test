version: 2.1
orbs:
  aws-cli: circleci/aws-cli@2.0.3
  # python: circleci/python@1.5.0
commands:
  destroy_infra:
    steps:
      - run:
          name: Destroy Aws infra
          when: on_fail
          command: |
            aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5}
  update_inventory:
    steps:
      - run:
          name: create inventory file
          command: |
            echo "[all]" > inventory.txt
      - run:
          name: update inventory with ips
          command: |
            aws ec2 describe-instances --query "Reservations[*].Instances[*].PublicIpAddress" --output text >> inventory.txt
      - persist_to_workspace:
          root: ~/project
          paths: 
            - inventory.txt
jobs:
  create_infrastructure: 
      docker:
        - image: amazon/aws-cli
      steps:
        - checkout
        - run:
            name: Install tar utility
            command: |
              yum install -y tar gzip        
        - run:
            name: Create Cloudformation Stack
            command: |
              aws cloudformation deploy \
                --template-file template.yml \
                --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
                --region us-east-1
        - update_inventory
        - destroy_infra
  configure_infrastructure: 
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints: ["a3:00:a7:22:fc:4a:5b:50:bb:ec:37:72:60:67:bc:96"] 
      - run:
          name: Install Ansible
          command: |
            apk add --update ansible
      - attach_workspace:
          at: ~/project
      - run:
          name: Run Playbook and Configure server
          command: |
            ansible-playbook -i inventory.txt awsdeploy.yml
workflows:
  on_commit:
    jobs:
      - create_infrastructure
      - configure_infrastructure:
           requires:
            - create_infrastructure

